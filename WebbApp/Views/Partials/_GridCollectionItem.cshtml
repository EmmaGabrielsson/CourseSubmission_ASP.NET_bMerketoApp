@model GridCollectionItemViewModel
@{
    var stock = await stockRepo.GetDataAsync(x => x.ProductArticleNumber == Model.Id);
}

<a asp-controller="products" asp-action="details" asp-route-id="@Model.Id" class="collection-item">
    <img src="~/images/products/@Model.ImageUrl" alt="@Model.Title">
</a>
    <div class="body">
        <div class="title text-start">@Model.Title</div>
        <div class="info">
        <div class="price">
            @if (stock.Discount > decimal.Zero)
            {
                 <div class="d-flex">
                    <p class="text-secondary fw-light me-3 small text-decoration-line-through">
                        $@(((decimal)stock.Price!).ToString(stock.Price % 1 == 0 ? "F0" : "F2"))
                    </p>
                    <p class="fw-bold small">
                        $@string.Format("{0:F" + (stock.Price % 1 == 0 ? "0" : "2") + "}", (decimal)stock.Price! * stock.Discount)
                    </p>
                </div>
            }
            else
            {
                <p class="fw-bold">
                    $@(((decimal)stock.Price).ToString(stock.Price % 1 == 0 ? "F0" : "F2"))
                </p>                
            }
        </div>
            @if (stock.Quantity != 0)
            {
            <a><i class="add-cart fa-regular fa-cart-plus"></i></a>
            } else
            {
            <a disabled title="out of stock"><i class="add-cart fa-regular fa-cart-plus disabled text-danger"></i></a>
            }
        </div>
    </div>
